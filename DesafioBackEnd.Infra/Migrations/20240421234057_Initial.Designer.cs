// <auto-generated />
using System;
using DesafioBackEnd.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DesafioBackEnd.Infra.Migrations
{
    [DbContext(typeof(DesafioContext))]
    [Migration("20240421234057_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DesafioBackEnd.Domain.Entities.Motorcycles.Motorcycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 4, 21, 23, 40, 57, 261, DateTimeKind.Utc).AddTicks(3340));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LicencePlate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.ToTable("Motorcycle");
                });

            modelBuilder.Entity("DesafioBackEnd.Domain.Entities.Motorcycles.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 4, 21, 23, 40, 57, 261, DateTimeKind.Utc).AddTicks(6210));

                    b.Property<int>("Days")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.ToTable("Plan");

                    b.HasData(
                        new
                        {
                            Id = new Guid("244d529f-225f-47a3-bf50-d8c58a5ec10f"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Days = 7,
                            IsActive = true,
                            Price = 30m
                        },
                        new
                        {
                            Id = new Guid("658039ab-222c-44c7-8691-7af6dabed329"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Days = 15,
                            IsActive = true,
                            Price = 30m
                        },
                        new
                        {
                            Id = new Guid("1e21b652-80eb-45dd-a414-15cc3ec257d4"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Days = 30,
                            IsActive = true,
                            Price = 30m
                        },
                        new
                        {
                            Id = new Guid("334f5188-3e10-44f1-9e5f-663bc32d1e58"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Days = 45,
                            IsActive = true,
                            Price = 30m
                        },
                        new
                        {
                            Id = new Guid("597ffa44-698b-4096-88c4-0d522b614cb1"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Days = 50,
                            IsActive = true,
                            Price = 30m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
